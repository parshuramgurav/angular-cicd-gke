pipeline {
    agent any
    environment {
        PROJECT_ID = 'seismic-mantis-376309'
                CLUSTER_NAME = 'monitoring-cluster'
                LOCATION = 'asia-south1-a'
                REGION = 'asia-south1'
                REPONAME = 'jenkinscicd'
                CREDENTIALS_ID = 'wif-config-file'
    }
    
    stages {

        stage("Generating OIDC token and saving it to a file") {
            steps {
                script {
                        sh (script: 'gcloud auth print-identity-token serviceaccounttoken@seismic-mantis-376309.iam.gserviceaccount.com  --audiences="//iam.googleapis.com/projects/27633948451/locations/global/workloadIdentityPools/jenkinsid"  > /usr/share/token/key',returnStdout: true)
                }
            }
        }
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build image') {
            steps {
                sh '''
                    whoami
                    sudo docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/$REPONAME/demo-angular:$BUILD_ID .
                '''
            }
        }
        stage('Push auth and image') {
            steps {
                 sh 'gcloud auth configure-docker     asia-south1-docker.pkg.dev --quiet'
                 sh 'docker push asia-south1-docker.pkg.dev/$PROJECT_ID/$REPONAME/demo-angular:$BUILD_ID' 
                                 
            }
        }
        stage('Deploy to K8s') {
            steps{
                echo "Deployment started ..."
                sh 'ls -ltr'
                sh 'pwd'
                sh "sed -i 's/tagversion/$BUILD_ID/g' deployment.yml"
                step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'deployment.yml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])
            }

        }
    }
}
